"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9190],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,f=u["".concat(d,".").concat(m)]||u[m]||c[m]||o;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},60256:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={id:"release",title:"Release Notes"},i=void 0,l={unversionedId:"release",id:"version-1.1.0/release",title:"Release Notes",description:"1.1.0",source:"@site/oxygenit_versioned_docs/version-1.1.0/release.md",sourceDirName:".",slug:"/release",permalink:"/oxygenit/release",draft:!1,tags:[],version:"1.1.0",frontMatter:{id:"release",title:"Release Notes"},sidebar:"mainSidebar",previous:{title:"Scaleway",permalink:"/oxygenit/providers/scaleway"}},d={},p=[{value:"1.1.0",id:"110",level:2},{value:"API changes",id:"api-changes",level:3},{value:"<code>/providers</code>",id:"providers",level:4},{value:"<code>/raw</code>",id:"raw",level:4},{value:"Documentation",id:"documentation",level:3},{value:"Predefined models",id:"predefined-models",level:3},{value:"Raw models",id:"raw-models",level:3},{value:"Breaking change",id:"breaking-change",level:3},{value:"1.0.0",id:"100",level:2}],s={toc:p},u="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"110"},"1.1.0"),(0,a.kt)("p",null,"The major update of that release is that OxygenIT has new APIs set,\nimproving documentation and extending predefined models."),(0,a.kt)("h3",{id:"api-changes"},"API changes"),(0,a.kt)("p",null,"After getting feedback from users on API 1.0.0, we changed the APIs of OxygenIT\nto enable a simpler usage. We also created the specification on OpenApi Specification 3.0 format\nto enable usage of third party tools to ease API use."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Have a look to ",(0,a.kt)("a",{parentName:"p",href:"https://api-co2.scaledynamics.com"},"OxygenIT carbon calculator API documentation"),"\nto get the full specification and start playing with the APIs.")),(0,a.kt)("p",null,"APIs are split in 2 sets ",(0,a.kt)("inlineCode",{parentName:"p"},"/providers")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"/raw")),(0,a.kt)("h4",{id:"providers"},(0,a.kt)("inlineCode",{parentName:"h4"},"/providers")),(0,a.kt)("p",null,"Enables to use predefined infrastructure provider models.\nCurrently we have ",(0,a.kt)("inlineCode",{parentName:"p"},"AWS"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"GCP"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Azure"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Scaleway")," provders, and others are coming."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To get the list of supported providers, use a GET on ",(0,a.kt)("inlineCode",{parentName:"li"},"/providers"),"."),(0,a.kt)("li",{parentName:"ul"},"To get the operation carbon footprint for a particular provider use a POST on\n",(0,a.kt)("inlineCode",{parentName:"li"},"/providers/providerId/operation")," where ",(0,a.kt)("inlineCode",{parentName:"li"},"providerId")," is the id of the provider you want to use\n(i.e. ",(0,a.kt)("inlineCode",{parentName:"li"},"/providers/aws/operation"),"for AWS`)"),(0,a.kt)("li",{parentName:"ul"},"To get the embodied carbon footprint for a particular provider use a POST on\n",(0,a.kt)("inlineCode",{parentName:"li"},"/providers/providerId/embodied")," where ",(0,a.kt)("inlineCode",{parentName:"li"},"providerId")," is the id of the provider you want to use\n(i.e. ",(0,a.kt)("inlineCode",{parentName:"li"},"/providers/azure/embodied"),"for Azure`)"),(0,a.kt)("li",{parentName:"ul"},"To get access of predefined model configurations (instance names, regions, gpus, storage types...),\nuse a GET on ",(0,a.kt)("inlineCode",{parentName:"li"},"/providers/providerId")," where ",(0,a.kt)("inlineCode",{parentName:"li"},"providerId")," is the id of the provider you want to use\n(i.e. ",(0,a.kt)("inlineCode",{parentName:"li"},"/providers/gcp"),"for GCP`)")),(0,a.kt)("h4",{id:"raw"},(0,a.kt)("inlineCode",{parentName:"h4"},"/raw")),(0,a.kt)("p",null,"Enables to use custom infrastructure models to represent an on-premise infrastrucutre."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To get the operation carbon footprint for a raw model use a POST on\n",(0,a.kt)("inlineCode",{parentName:"li"},"/raw/operation")),(0,a.kt)("li",{parentName:"ul"},"To get the embodied carbon footprint for a raw model use a POST on\n",(0,a.kt)("inlineCode",{parentName:"li"},"/raw/embodied")),(0,a.kt)("li",{parentName:"ul"},"To get access of raw model configurations (micro-archicture types, gpus, ...),\nuse a GET on ",(0,a.kt)("inlineCode",{parentName:"li"},"/raw"))),(0,a.kt)("h3",{id:"documentation"},"Documentation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Rework main documentation to manage oxygenIT releases"),(0,a.kt)("li",{parentName:"ul"},"Specification available on OpenApi Specification 3.0 format"),(0,a.kt)("li",{parentName:"ul"},"Use Swagger UI for documentation and start playing with the APIs")),(0,a.kt)("h3",{id:"predefined-models"},"Predefined models"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Added new GCP regions and instances with and without GPU"),(0,a.kt)("li",{parentName:"ul"},"Added new AWS instance models with and without GPU"),(0,a.kt)("li",{parentName:"ul"},"Added new Scaleway instance models with and without GPU",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"Total of 501.414 predefined models")))),(0,a.kt)("h3",{id:"raw-models"},"Raw models"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Added new classification of GPUs")),(0,a.kt)("h3",{id:"breaking-change"},"Breaking change"),(0,a.kt)("h2",{id:"100"},"1.0.0"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Initial API version")))}c.isMDXComponent=!0}}]);