"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3156],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",v={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),d=a,m=u["".concat(s,".").concat(d)]||u[d]||v[d]||i;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9162:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>v,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={id:"env-variables",title:"Environment variables"},l=void 0,o={unversionedId:"services/env-variables",id:"services/env-variables",title:"Environment variables",description:"Our platform provides a way to send environment variables to your services. When the container service starts, it will have access to these variables in its environment.",source:"@site/docs/services/env-variables.md",sourceDirName:"services",slug:"/services/env-variables",permalink:"/docs/next/services/env-variables",draft:!1,tags:[],version:"current",frontMatter:{id:"env-variables",title:"Environment variables"},sidebar:"mainSidebar",previous:{title:"Logs",permalink:"/docs/next/services/logs"},next:{title:"Inter Service Traffic",permalink:"/docs/next/services/ist"}},s={},c=[{value:"Configuration file&#39;s variables",id:"configuration-files-variables",level:2},{value:"Example of <code>warp.config.js</code>",id:"example-of-warpconfigjs",level:3},{value:"Default exported variables",id:"default-exported-variables",level:2},{value:"General",id:"general",level:3}],p={toc:c},u="wrapper";function v(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Our platform provides a way to send environment variables to your services. When the container service starts, it will have access to these variables in its environment."),(0,a.kt)("h2",{id:"configuration-files-variables"},"Configuration file's variables"),(0,a.kt)("p",null,"To send variables to a service, you must declare your environment variable in a ",(0,a.kt)("inlineCode",{parentName:"p"},"variables")," object inside the configuration file of the service See ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/services/configuration-file"},"configuration file"),". The property names of this object will be the name of your variables. Their value can be a string, an empty string or an object."),(0,a.kt)("h3",{id:"example-of-warpconfigjs"},"Example of ",(0,a.kt)("inlineCode",{parentName:"h3"},"warp.config.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = {\n  docker: "docker",\n  variables: {\n    myfirstvar: "value",\n    mysecondvar: "",\n    mythirdvar: {\n      local: true,\n    },\n  },\n};\n')),(0,a.kt)("p",null,"If it is an object (like for ",(0,a.kt)("inlineCode",{parentName:"p"},"mythirdvar"),"in the previous example), then its possible values are:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"{\n  local: true,\n}\n")),(0,a.kt)("p",null,"In this case, the value will be taken from the CLI."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"{\n  empty: true,\n}\n")),(0,a.kt)("p",null,"In this case, the variable will be declared but not assigned a value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"{\n  undef: true,\n}\n")),(0,a.kt)("p",null,"In this case, the variable will be undefined."),(0,a.kt)("h2",{id:"default-exported-variables"},"Default exported variables"),(0,a.kt)("h3",{id:"general"},"General"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"WARP_PROJECT_ID, the project ID where the service is deployed,"),(0,a.kt)("li",{parentName:"ul"},"WARP_PROJECT, the project name where the service is deployed,"),(0,a.kt)("li",{parentName:"ul"},"WARP_ENV_ID, the environment ID where the service is deployed,"),(0,a.kt)("li",{parentName:"ul"},"WARP_ENV, the environment name where the service is deployed,"),(0,a.kt)("li",{parentName:"ul"},"WARP_SERVICE_ID, the service ID of the deployed service,"),(0,a.kt)("li",{parentName:"ul"},"WARP_SERVICE, the service name of the deployed service,"),(0,a.kt)("li",{parentName:"ul"},"WARP_DEPLOYMENT_ID, the deployment ID,"),(0,a.kt)("li",{parentName:"ul"},"WARP_DEPLOYMENT, the deployment name,"),(0,a.kt)("li",{parentName:"ul"},"WARP_RUNNER_ID, the runner ID where the service is deployed,"),(0,a.kt)("li",{parentName:"ul"},"WARP_RUNNER, the runner name where the service is deployed,")))}v.isMDXComponent=!0}}]);