"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8620],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5958:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],l={id:"server",title:"Node.js server"},i=void 0,c={unversionedId:"getting-started/server",id:"getting-started/server",title:"Node.js server",description:"On our platform you can deploy a standard HTTP Node.js server (i.e. using Express, Koa, Fastify, ...) so you can access it with traditional HTTP requests. You can use your favorite Node.js web framework to host all all your website by serving your static assets and backend, your microservice APIs, a backend proxy... without managing the cloud itself (provisioning, deployment, setup, HTTPS certificates, security patches, cloud change...)",source:"@site/docs/getting-started/server.md",sourceDirName:"getting-started",slug:"/getting-started/server",permalink:"/docs/getting-started/server",draft:!1,tags:[],version:"current",frontMatter:{id:"server",title:"Node.js server"},sidebar:"mainSidebar",previous:{title:"Docker server",permalink:"/docs/getting-started/docker"},next:{title:"Static hosting",permalink:"/docs/getting-started/hosting"}},p={},u=[{value:"1. Prepare the project",id:"1-prepare-the-project",level:2},{value:"2. Create a basic HTTP Express.js Node.js server",id:"2-create-a-basic-http-expressjs-nodejs-server",level:2},{value:"Create a <code>package.json</code> file",id:"create-a-packagejson-file",level:3},{value:"Install Express",id:"install-express",level:3},{value:"Create <code>index.js</code>",id:"create-indexjs",level:3},{value:"3. Install the ScaleDynamics SDK",id:"3-install-the-scaledynamics-sdk",level:2},{value:"4. Create the project and the environment",id:"4-create-the-project-and-the-environment",level:2},{value:"Login to your account",id:"login-to-your-account",level:3},{value:"Create a project",id:"create-a-project",level:3},{value:"Create an environment",id:"create-an-environment",level:3},{value:"5. Setup services for the environment",id:"5-setup-services-for-the-environment",level:2},{value:"6. Deploy the server",id:"6-deploy-the-server",level:2},{value:"7. Call the server",id:"7-call-the-server",level:2},{value:"Chapeau!",id:"chapeau",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"On our platform you can deploy a standard HTTP Node.js server (i.e. using Express, Koa, Fastify, ...) so you can access it with traditional HTTP requests. You can use your favorite Node.js web framework to host all all your website by serving your static assets and backend, your microservice APIs, a backend proxy... without managing the cloud itself (provisioning, deployment, setup, HTTPS certificates, security patches, cloud change...)"),(0,o.kt)("p",null,"In this quick tutorial, you'll learn how to create and deploy a basic Express HTTP Node.js server you can call from HTTP."),(0,o.kt)("h2",{id:"1-prepare-the-project"},"1. Prepare the project"),(0,o.kt)("p",null,"Let's start from our ready-to-use project, and go directly to the ",(0,o.kt)("a",{parentName:"p",href:"#4-create-the-project-and-the-environment"},"step 4")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/ScaleDynamics/server my-server\ncd my-server/\nnpm install\n")),(0,o.kt)("p",null,"or,"),(0,o.kt)("p",null,"Let's create manually your own ",(0,o.kt)("inlineCode",{parentName:"p"},"my-server")," working directory, and follow the next steps"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"mkdir my-server\ncd my-server/\n")),(0,o.kt)("h2",{id:"2-create-a-basic-http-expressjs-nodejs-server"},"2. Create a basic HTTP Express.js Node.js server"),(0,o.kt)("h3",{id:"create-a-packagejson-file"},"Create a ",(0,o.kt)("inlineCode",{parentName:"h3"},"package.json")," file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "my-server",\n  "version": "1.0.0",\n  "main": "index.js",\n  "scripts": {\n    "start": "node ."\n  }\n}\n')),(0,o.kt)("h3",{id:"install-express"},"Install Express"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npm install express\n")),(0,o.kt)("h3",{id:"create-indexjs"},"Create ",(0,o.kt)("inlineCode",{parentName:"h3"},"index.js")),(0,o.kt)("p",null,"Create a new ",(0,o.kt)("inlineCode",{parentName:"p"},"index.js")," file in the server directory, and copy-paste the following code into it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// my-server/index.js\n\nconst express = require('express');\nconst app = express();\nconst port = process.env.WARP_PORT || 3000;\n\napp.get('/', (req, res) => {\n  const name = req.query.name || 'World';\n  const data = {\n    message: `Hello ${name} from Node.js`,\n    node: process.version,\n    date: new Date().toISOString(),\n  };\n  res.json(data);\n});\n\napp.listen(port, () => {\n  console.log(`This app listens on the port ${port}`);\n});\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note that server must use ",(0,o.kt)("inlineCode",{parentName:"p"},"process.env.WARP_PORT")," to identify which port to listen.")),(0,o.kt)("h2",{id:"3-install-the-scaledynamics-sdk"},"3. Install the ScaleDynamics SDK"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"To install the SDK you need Node.js installed on your computer.",(0,o.kt)("br",{parentName:"p"}),"\n","Look at ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"https://nodejs.org/en/download/")," to install it.")),(0,o.kt)("p",null,"Install the SDK to access all CLI commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npm install warp --save-dev\n")),(0,o.kt)("p",null,"To access our CLI, use ",(0,o.kt)("inlineCode",{parentName:"p"},"npx warp"),". You can have the list of available commands and help with "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp help\n")),(0,o.kt)("h2",{id:"4-create-the-project-and-the-environment"},"4. Create the project and the environment"),(0,o.kt)("p",null,"The deployment of a server module requires to indicate in which ",(0,o.kt)("strong",{parentName:"p"},"project")," and which ",(0,o.kt)("strong",{parentName:"p"},"environment")," you want to deploy and execute your module."),(0,o.kt)("p",null,"A ",(0,o.kt)("strong",{parentName:"p"},"project")," is a name that identifies a website, a web app, a microservice or an API."),(0,o.kt)("p",null,"An ",(0,o.kt)("strong",{parentName:"p"},"environment")," is a name that identifies a cloud execution configuration to run modules. For example you can have 'pre-prod', 'demo', 'staging' or 'production' environments. Each one will have it's own cloud resource configuration. "),(0,o.kt)("h3",{id:"login-to-your-account"},"Login to your account"),(0,o.kt)("p",null,"To access projects and deployment resources you need a ScaleDynamics account. You can ",(0,o.kt)("a",{href:"https://console.scaledynamics.com/auth/signup",target:"_blank",rel:"noopener"},"sign up here")," to create your account. Subscription is FREE, no credit card required."),(0,o.kt)("p",null,"Once your account is created, you can login to your account with your email and password:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp login\n")),(0,o.kt)("h3",{id:"create-a-project"},"Create a project"),(0,o.kt)("p",null,"A project identifies a website, a web app, a microservice or an API. "),(0,o.kt)("p",null,"Let's create a ",(0,o.kt)("inlineCode",{parentName:"p"},"server")," project, and let's indicate the SDK we are working in it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp project create server\nnpx warp project select server\n")),(0,o.kt)("h3",{id:"create-an-environment"},"Create an environment"),(0,o.kt)("p",null,"Let's create a ",(0,o.kt)("inlineCode",{parentName:"p"},"demo")," environment, and let's indicate the SDK we are working in it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp env create demo\nnpx warp env select demo\n")),(0,o.kt)("h2",{id:"5-setup-services-for-the-environment"},"5. Setup services for the environment"),(0,o.kt)("p",null,"Before deploying you need to enable the ",(0,o.kt)("em",{parentName:"p"},"Managed Node.js server")," service and assign cloud resources to run it. To do that, open the ",(0,o.kt)("a",{href:"https://scaledynamics.com/console",target:"_blank",rel:"noopener"},"console"),", select the organization, the ",(0,o.kt)("em",{parentName:"p"},"server")," project and the ",(0,o.kt)("em",{parentName:"p"},"demo")," environment. Then enable the ",(0,o.kt)("em",{parentName:"p"},"Managed Node.js server")," service and assign a Shared Free cloud resource on the provider and the region you choose."),(0,o.kt)("p",null,"After subscribing resources, you will see in the console your services configurations."),(0,o.kt)("h2",{id:"6-deploy-the-server"},"6. Deploy the server"),(0,o.kt)("p",null,"You're now ready to deploy the server module."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp deploy\n")),(0,o.kt)("p",null,"During the deployment, you will have to indicate the url where you want to access your server after deployment. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"\u2714 Enter a hostname for 'server' (fully qualified or not), leave blank for random: \u2026 \n")),(0,o.kt)("p",null,"You can enter a name or press return to get a random one."),(0,o.kt)("p",null,"After deployment the url to use to call your module is dumped on the terminal."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"if you want to know the deployment url, you can access the console or use the following command to get it:"),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp env info\n"))),(0,o.kt)("h2",{id:"7-call-the-server"},"7. Call the server"),(0,o.kt)("p",null,"Now the server is deployed, let's call it from using curl for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"curl https://DEPLOYMENT_URL\n")),(0,o.kt)("h2",{id:"chapeau"},"Chapeau!"),(0,o.kt)("p",null,"Congrats', you deployed your first managed Node.js server. Want to continue?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://scaledynamics.com/pricing"},"Browse our pricing page to browse our catalog of resources"))))}m.isMDXComponent=!0}}]);