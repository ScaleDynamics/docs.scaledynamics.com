"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2313],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2083:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={id:"deployment",title:"Deployment"},a=void 0,l={unversionedId:"containers/deployment",id:"containers/deployment",title:"Deployment",description:"Our SDK provides you a CLI to deploy.",source:"@site/docs/containers/deployment.md",sourceDirName:"containers",slug:"/containers/deployment",permalink:"/docs/containers/deployment",draft:!1,tags:[],version:"current",frontMatter:{id:"deployment",title:"Deployment"},sidebar:"mainSidebar",previous:{title:"Delete a runner",permalink:"/docs/runners/delete"},next:{title:"Configuration file",permalink:"/docs/containers/configuration-file"}},p={},c=[{value:"Principle",id:"principle",level:2},{value:"Configuration",id:"configuration",level:3},{value:"First deployment",id:"first-deployment",level:3},{value:"Deploy one or multiple containers",id:"deploy-one-or-multiple-containers",level:2}],s={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Our SDK provides you a CLI to deploy."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp deploy\n")),(0,o.kt)("h2",{id:"principle"},"Principle"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"deploy")," command is able to deploy a container"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"from a dockerfile"),(0,o.kt)("li",{parentName:"ul"},"from a nodeJs server"),(0,o.kt)("li",{parentName:"ul"},"from static assets")),(0,o.kt)("p",null,"During the deployment, the platform manages the setup of the endpoints, the creation of HTTPS certificates, the docker image build and storage in a private repository, the deployment of the image and run on the selected runner."),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"The command can be applied on one or multiple directories."),(0,o.kt)("p",null,"For each directory the command is applied, it searches for a ",(0,o.kt)("inlineCode",{parentName:"p"},"warp.config.js")," ",(0,o.kt)("a",{parentName:"p",href:"configuration-file"},"configuration file")," that indicate how to configure the deployment of container. "),(0,o.kt)("p",null,"If there is no configuration file or deployement configuration, the command identifies automatically the deployment configuration in that way:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"if there is a ",(0,o.kt)("inlineCode",{parentName:"li"},"Dockerfile"),", it will deploy from the dockerfile and use the deployment type 'docker'"),(0,o.kt)("li",{parentName:"ul"},"if there is a ",(0,o.kt)("inlineCode",{parentName:"li"},"public"),"or ",(0,o.kt)("inlineCode",{parentName:"li"},"hosting")," directory, it will deploy static assets and use the deployment type 'hosting'"),(0,o.kt)("li",{parentName:"ul"},"if there is a ",(0,o.kt)("inlineCode",{parentName:"li"},"scripts.start")," in a ",(0,o.kt)("inlineCode",{parentName:"li"},"package.json"),", it will deploy a nodeJs server and use the deployment type 'server'"),(0,o.kt)("li",{parentName:"ul"},"if there is a ",(0,o.kt)("inlineCode",{parentName:"li"},"main")," in a ",(0,o.kt)("inlineCode",{parentName:"li"},"package.json"),", it will deploy a nodeJs module and use the deployment type 'module' (see ",(0,o.kt)("a",{parentName:"li",href:"/docs/module/module-as-a-service"},"beta module-as-a-service"),")")),(0,o.kt)("h3",{id:"first-deployment"},"First deployment"),(0,o.kt)("p",null,"During the first deployment two additional configurations are required for each container:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the runner name to deploy on"),(0,o.kt)("li",{parentName:"ul"},"the url to use to access the container")),(0,o.kt)("p",null,"These infos can also be specified in the configuration file. But if there are missing, you will have to interactively enter your values."),(0,o.kt)("p",null,"About urls, we provide test urls for testing/dev deployments, but you can also assigned you custom domain on an container see ",(0,o.kt)("a",{parentName:"p",href:"custom-domains"},"Use custom domains")),(0,o.kt)("p",null,"At last, a name to identify the container that is deployed, and other following deployment will be set.\nIf there is a name specified in the configuration it is used. Otherwise the command line sets\nautomatically a name in that way according to the deployment type:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In the case  'server' or 'module', the package name in ",(0,o.kt)("inlineCode",{parentName:"li"},"package.json"),"is used."),(0,o.kt)("li",{parentName:"ul"},"For 'docker' the parent dirname of where is located the Dockerfile is used."),(0,o.kt)("li",{parentName:"ul"},"For 'hosting' the parent dirname of where is located ",(0,o.kt)("inlineCode",{parentName:"li"},"public"),"or ",(0,o.kt)("inlineCode",{parentName:"li"},"static"),"is used.")),(0,o.kt)("h2",{id:"deploy-one-or-multiple-containers"},"Deploy one or multiple containers"),(0,o.kt)("p",null,"If no parameter is used, the command will scan inside the directory you run the command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp deploy\n")),(0,o.kt)("p",null,"You can also indicate which directory to deploy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp deploy <directory>\n")),(0,o.kt)("p",null,"To deploy a specific configuration (that can be used for one or multiple container deployment)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp deploy <configuration_file>\n")),(0,o.kt)("p",null,"To deploy multiple containers at once, indicate the list of directories to deploy, by doing this way, the command will create a global configuration merging all sub configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp deploy <directory1> <directory2> <directory3>\n")),(0,o.kt)("p",null,"In that case you can also use configuration files and directories "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx warp deploy <configuration_file1> <directory1> <directory2> <configuration_file2>\n")))}d.isMDXComponent=!0}}]);