"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1281],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||r;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},70268:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(87462),o=(n(67294),n(3905));const r={id:"methodology",title:"Methodology"},i=void 0,l={unversionedId:"methodology",id:"version-1.1.0/methodology",title:"Methodology",description:"We present below the method we use to calculate the energy consumption estimate as well as the two carbon estimates.",source:"@site/oxygenit_versioned_docs/version-1.1.0/methodology.md",sourceDirName:".",slug:"/methodology",permalink:"/oxygenit/methodology",draft:!1,tags:[],version:"1.1.0",frontMatter:{id:"methodology",title:"Methodology"}},c={},s=[{value:"Calculation of energy consumption",id:"calculation-of-energy-consumption",level:2},{value:"Calculation of operational CO2",id:"calculation-of-operational-co2",level:2},{value:"Calculation of embodied CO2",id:"calculation-of-embodied-co2",level:2}],p={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"We present below the method we use to calculate the energy consumption estimate as well as the two carbon estimates."),(0,o.kt)("h2",{id:"calculation-of-energy-consumption"},"Calculation of energy consumption"),(0,o.kt)("p",null,"The energy consumption estimate is calculated as the sum of the following estimated energy contributions, and each detailed in the following paragraphs:"),(0,o.kt)("p",null,"$$\nE = (P_c + P_m + P_s + P_n) \\times T_u\n$$"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"Pc: processors:")," Power consumed by the actual physical or virtual CPU(s), estimated from benchmarked minimum and maximum values, in proportion to the number of CPUs and the % load. The same principle applies to any GPUs.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"Pm: memory:")," power consumed by the RAM memory, estimated by multiplying the RAM size by a unit power.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"Ps: storage:")," power consumed by the disk, estimated by multiplying the storage size by a unit power and the possible replication factor, given by the infrastructure provider and the storage service associated with the instance.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"Pn: Networking:")," the energy consumed by the network I/O accesses, estimated by multiplying the quantity of data exchanged (inputs + outputs) by a unit power.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"Tu: reference duration")," on which the estimate is projected (taking into account measurements with the software load considered)."))),(0,o.kt)("h2",{id:"calculation-of-operational-co2"},"Calculation of operational CO2"),(0,o.kt)("p",null,"In general, the operational carbon equivalent is always calculated, for an electricity-consuming service in a given region (and therefore, a cloud instance), from an energy (in Wh or kWh) by a formula of the type :"),(0,o.kt)("p",null,"$$\nC",(0,o.kt)("em",{parentName:"p"},"{op} = E \\times P"),"{UE} \\times F_c\n$$"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"Cop:")," operational carbon, in g, kg or T of CO2 equivalent.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"E:")," energy consumed by the software load in Wh or kWh (see the previous paragraph, calculation of energy consumption)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"Pue:")," Power usage effectiveness (name often used), which can be considered as the inverse of the energy efficiency of the infrastructure (allows to take into account the total electrical energy actually dedicated to the execution of the load software - i.e: excluding cooling, converters, etc.). PUE is > 1 and given in general for a data center, or as the global average of the provider.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"Fc:")," conversion factor (k)Wh \u2192 CO2 of the regional electricity network, possibly corrected for data centers equipped with autonomous generators (often published in Tons of CO2 / kWh). Generally available by region (given the significant disparities), more rarely by data center."))),(0,o.kt)("h2",{id:"calculation-of-embodied-co2"},"Calculation of embodied CO2"),(0,o.kt)("p",null,"The calculation uses a formula specified in the SCI (SW carbon intensity spec) of the Green SW Foundation :"),(0,o.kt)("p",null,"$$\nC",(0,o.kt)("em",{parentName:"p"},"c = C"),"{t,c} \\times {T_a \\over L} \\times S_a\n$$"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Ctc"),": total emissions due to the construction of the HW (g, kg or T CO2eq), manufacturer data."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Ta"),": allocation time from HW to SW."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"L"),": lifetime of the installation (typically: 4 years)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Sa"),": Share of the HW resource allocated to the SW (for virtual instances, number of vCPUs divided by the maximum total number of vCPUs that can be allocated on the \u201cbare metal\u201d server)")))}m.isMDXComponent=!0}}]);