"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[497],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,y=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(y,l(l({ref:t},c),{},{components:n})):a.createElement(y,l({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3739:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={id:"add",title:"Add manually a runner"},l=void 0,o={unversionedId:"runners/add",id:"version-5.0.2/runners/add",title:"Add manually a runner",description:"Adding manualy a runner is a feature only available for Enterprises account. Please contact sales@scaledynamics.com.",source:"@site/versioned_docs/version-5.0.2/runners/add.md",sourceDirName:"runners",slug:"/runners/add",permalink:"/docs/runners/add",draft:!1,tags:[],version:"5.0.2",frontMatter:{id:"add",title:"Add manually a runner"},sidebar:"mainSidebar",previous:{title:"Create a Runner",permalink:"/docs/runners/create"},next:{title:"View Runners",permalink:"/docs/runners/view"}},s={},u=[{value:"Prerequesites",id:"prerequesites",level:2},{value:"Linux distribution compatibility",id:"linux-distribution-compatibility",level:2},{value:"Using the script",id:"using-the-script",level:2},{value:"Example",id:"example",level:3},{value:"Supported clouds",id:"supported-clouds",level:2},{value:"AWS",id:"aws",level:3},{value:"GCP",id:"gcp",level:3},{value:"Azure",id:"azure",level:3},{value:"Scaleway",id:"scaleway",level:3},{value:"OVH",id:"ovh",level:3},{value:"Outscale",id:"outscale",level:3}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Adding manualy a runner is a feature only available for Enterprises account. Please contact ",(0,r.kt)("a",{parentName:"p",href:"mailto:sales@scaledynamics.com"},"sales@scaledynamics.com"),".")),(0,r.kt)("p",null,"All public clouds or on-premises don't provide APIs to provision dynamically\na cloud instance, an on-premise VM or a bare metal server."),(0,r.kt)("p",null,"In these cases we provide a ",(0,r.kt)("em",{parentName:"p"},"add-runner")," script to setup and provision an existing linux based cloud instance, on-premise VM or bare metal server to the platform. After being added, the new runner works as others, so you can deploy containers, access metrics..."),(0,r.kt)("h2",{id:"prerequesites"},"Prerequesites"),(0,r.kt)("p",null,"The instance or on-premise VM or a bare metal server must"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"be running an amd64 linux based operating system, distribution Debian 10, Debian 11, or CentOs 7."),(0,r.kt)("li",{parentName:"ul"},"have a public IP"),(0,r.kt)("li",{parentName:"ul"},"have port 22 opened for the remote Address: 35.233.111.9 all time. Note that ssh can only be used using a private key, root login is disabled."),(0,r.kt)("li",{parentName:"ul"},"have port 443 opened to everywhere all time")),(0,r.kt)("h2",{id:"linux-distribution-compatibility"},"Linux distribution compatibility"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"add-runner")," script is available for some Linux distributions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Debian 10 - ",(0,r.kt)("a",{href:"https://gitlab.com/ScaleDynamics/support/-/snippets/2252182"},"Download")),(0,r.kt)("li",{parentName:"ul"},"Debian 11 - ",(0,r.kt)("a",{href:"https://gitlab.com/ScaleDynamics/support/-/snippets/2252182"},"Download")),(0,r.kt)("li",{parentName:"ul"},"CentOs 7 - ",(0,r.kt)("a",{href:"https://gitlab.com/ScaleDynamics/support/-/snippets/2250434"},"Download"))),(0,r.kt)("p",null,"If you're using another linux distribution, please contact us (",(0,r.kt)("a",{parentName:"p",href:"mailto:support@scaledynamics.com"},"support@scaledynamics.com"),"). It is also possible\nto remove port 22 all time, please contact us (",(0,r.kt)("a",{parentName:"p",href:"mailto:support@scaledynamics.com"},"support@scaledynamics.com"),")."),(0,r.kt)("h2",{id:"using-the-script"},"Using the script"),(0,r.kt)("p",null,"To use the script you need to have"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"api_key")," which is a specific API Key must be provided by ScaleDynamics"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"org_id")," which indicates on which organisation to add the runner. You can get it on the org tab of the console, in settings."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"linux_model")," which indicates the type of linux based distribution. There are also provided by ScaleDynamics on request."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"runner_name")," which indicates the name of the runner you want to create.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"./add-runner.sh <api_key> <org_id> <linux_model> <runner_name>\n")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("p",null,"Below and example on how to add a Debian based linux runner with name ",(0,r.kt)("inlineCode",{parentName:"p"},"my-runner-01")," on our platform."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"./add-runner.sh <connect_api_key> <org_id> sd-on-premise-debian my-runner-01\n")),(0,r.kt)("h2",{id:"supported-clouds"},"Supported clouds"),(0,r.kt)("h3",{id:"aws"},"AWS"),(0,r.kt)("p",null,"You can connect EC2 instances"),(0,r.kt)("h3",{id:"gcp"},"GCP"),(0,r.kt)("p",null,"You can connect public cloud instances"),(0,r.kt)("h3",{id:"azure"},"Azure"),(0,r.kt)("p",null,"You can connect public cloud instances"),(0,r.kt)("h3",{id:"scaleway"},"Scaleway"),(0,r.kt)("p",null,"You can connect public cloud instances, or bare metal servers"),(0,r.kt)("h3",{id:"ovh"},"OVH"),(0,r.kt)("p",null,"You can connect public cloud instances, or bare metal servers"),(0,r.kt)("h3",{id:"outscale"},"Outscale"),(0,r.kt)("p",null,"You can connect public cloud instances"))}d.isMDXComponent=!0}}]);