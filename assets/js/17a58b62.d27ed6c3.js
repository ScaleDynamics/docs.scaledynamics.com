"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1957],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(n),u=i,h=c["".concat(s,".").concat(u)]||c[u]||d[u]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var m=2;m<r;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},64285:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var a=n(87462),i=(n(67294),n(3905));const r={id:"ist",title:"Inter Service Traffic"},o=void 0,l={unversionedId:"services/ist",id:"version-5.4/services/ist",title:"Inter Service Traffic",description:"By Inter Service Traffic (IST), we mean all private communications between services. These communications are authenticated and encrypted. No other  services, or any connection from outside, will have access to the services. These private communications work if your services are on the same runner, but also if they are on two different runners or even on different providers. These communications support any port but are restricted to the TCP protocol.",source:"@site/versioned_docs/version-5.4/services/ist.md",sourceDirName:"services",slug:"/services/ist",permalink:"/docs/services/ist",draft:!1,tags:[],version:"5.4",frontMatter:{id:"ist",title:"Inter Service Traffic"},sidebar:"mainSidebar",previous:{title:"Environment variables",permalink:"/docs/services/env-variables"},next:{title:"Moving a service",permalink:"/docs/services/move"}},s={},m=[{value:"Without configuration",id:"without-configuration",level:2},{value:"With hostname",id:"with-hostname",level:3},{value:"With environment variables",id:"with-environment-variables",level:3},{value:"General environment variables",id:"general-environment-variables",level:4},{value:"Environment variable oriented shell script",id:"environment-variable-oriented-shell-script",level:4},{value:"Encoding examples",id:"encoding-examples",level:3},{value:"Specific configuration in <code>warp.config.js</code>",id:"specific-configuration-in-warpconfigjs",level:2},{value:"Conflicts",id:"conflicts",level:2},{value:"Resolution of <em>IST</em> hostname",id:"resolution-of-ist-hostname",level:2},{value:"Service visibility",id:"service-visibility",level:2}],p={toc:m},c="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"By Inter Service Traffic (",(0,i.kt)("em",{parentName:"p"},"IST"),"), we mean all private communications between services. These communications are authenticated and encrypted. No other  services, or any connection from outside, will have access to the services. These private communications work if your services are on the same runner, but also if they are on two different runners or even on different providers. These communications support any port but are restricted to the ",(0,i.kt)("em",{parentName:"p"},"TCP")," protocol."),(0,i.kt)("p",null,"Using Inter Service Traffic (",(0,i.kt)("em",{parentName:"p"},"IST"),") is as easy as using a predefined private hostname, or using a predefined environment variables."),(0,i.kt)("h1",{id:"communications-between-services-in-the-same-deployment"},"Communications between services in the same deployment"),(0,i.kt)("h2",{id:"without-configuration"},"Without configuration"),(0,i.kt)("p",null,"Without configuration, services can communicate with other services inside the same deployment by using specific environment variables or specific hostnames without any further setting."),(0,i.kt)("h3",{id:"with-hostname"},"With hostname"),(0,i.kt)("p",null,"For each service in the same deployment, a hostname is set with the private IP of the service. So, in application code or in script, you can use these hostnames to communicate by ",(0,i.kt)("em",{parentName:"p"},"TCP")," with another service."),(0,i.kt)("p",null,"For a service ",(0,i.kt)("inlineCode",{parentName:"p"},"<service-name>"),", a hostname ",(0,i.kt)("inlineCode",{parentName:"p"},"<encoded-service-name>.warp")," is accessible. Usually, the ",(0,i.kt)("inlineCode",{parentName:"p"},"<encoded-service-name>")," is equal to the ",(0,i.kt)("inlineCode",{parentName:"p"},"<service-name>"),", but in case you use non-127 ASCII characters (",(0,i.kt)("em",{parentName:"p"},"e.g.")," Unicode character) or space, the ",(0,i.kt)("inlineCode",{parentName:"p"},"<encoded-service-name>")," is computed as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Convert the name with ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Internationalized_domain_name"},"Internationalized domain name")," and ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Punycode"},"Punycode"),"."),(0,i.kt)("li",{parentName:"ul"},"Lowercase all characters."),(0,i.kt)("li",{parentName:"ul"},"Replace all non-alphanumeric characters with a ",(0,i.kt)("em",{parentName:"li"},"hyphen")," ( ",(0,i.kt)("inlineCode",{parentName:"li"},"-")," )."),(0,i.kt)("li",{parentName:"ul"},"Remove all trailing ",(0,i.kt)("em",{parentName:"li"},"hyphens")," ( ",(0,i.kt)("inlineCode",{parentName:"li"},"-")," ).")),(0,i.kt)("h3",{id:"with-environment-variables"},"With environment variables"),(0,i.kt)("p",null,"For each service in the same deployment, two environment variables are declared and set with the private IP of the service. So, in application code or in script, you can use these environment variables to communicate by ",(0,i.kt)("em",{parentName:"p"},"TCP")," with another service. No other configuration is needed."),(0,i.kt)("h4",{id:"general-environment-variables"},"General environment variables"),(0,i.kt)("p",null,"For a service ",(0,i.kt)("inlineCode",{parentName:"p"},"<service-name>"),", an environment variable ",(0,i.kt)("inlineCode",{parentName:"p"},"WARP_IST_<encoded-service-name>")," is accessible. Usually, the ",(0,i.kt)("inlineCode",{parentName:"p"},"<encoded-service-name>")," is equal to the ",(0,i.kt)("inlineCode",{parentName:"p"},"<service-name>"),", but in case you use non-127 ASCII characters (",(0,i.kt)("em",{parentName:"p"},"e.g.")," Unicode characters) or space in your service name, the ",(0,i.kt)("inlineCode",{parentName:"p"},"<encoded-service-name>")," is computed as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Convert the name into 127 ASCII characters with the ",(0,i.kt)("a",{parentName:"li",href:"https://lucene.apache.org/core/9_7_0/analysis/common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html"},"ASCIIFoldingFilter"),"."),(0,i.kt)("li",{parentName:"ul"},"If there are remaining non-127 ASCII characters, encode them with ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Punycode"},"Punycode"),"."),(0,i.kt)("li",{parentName:"ul"},"Replace all ",(0,i.kt)("em",{parentName:"li"},"spaces")," and ",(0,i.kt)("em",{parentName:"li"},"equals")," ( ",(0,i.kt)("inlineCode",{parentName:"li"},"=")," ) with ",(0,i.kt)("em",{parentName:"li"},"underscores")," ( ",(0,i.kt)("inlineCode",{parentName:"li"},"_")," ).")),(0,i.kt)("h4",{id:"environment-variable-oriented-shell-script"},"Environment variable oriented shell script"),(0,i.kt)("p",null,"Because some shell and Unix utilities could have difficulties dealing with special characters in the name of an environment variable, a second environment variable is also set by replacing all non-alphanumeric characters in the previous one with ",(0,i.kt)("em",{parentName:"p"},"underscores")," ( ",(0,i.kt)("inlineCode",{parentName:"p"},"_")," )."),(0,i.kt)("h3",{id:"encoding-examples"},"Encoding examples"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Service name"),(0,i.kt)("th",{parentName:"tr",align:null},"Hostname"),(0,i.kt)("th",{parentName:"tr",align:null},"Generic environment variable"),(0,i.kt)("th",{parentName:"tr",align:null},"Shell environment variable"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"my-db")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"my-db.warp")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST_my-db")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST_my_db"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"my db")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"my-db.warp")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST_my_db")),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"my=db")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"my-db.warp")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST_my_db")),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"my-db:dev")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"my-db-dev.warp")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST_my-db:dev")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST_my_db_dev"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"My-DB-")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"my-db.warp")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST_My-DB-")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST_My_DB_"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"mes-donn\xe9es")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"xn--mes-donnes-i7a.warp")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST_mes-donnees")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST_mes_donnees"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"\u2705 db")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"xn---db-8g6a.warp")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST__db-8g6a")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST__db_8g6a"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"\u6211\u7684\u6570\u636e")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"xn--wnu53ab8bw85a.warp")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WARP_IST_wnu53ab8bw85a")),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h2",{id:"specific-configuration-in-warpconfigjs"},"Specific configuration in ",(0,i.kt)("inlineCode",{parentName:"h2"},"warp.config.js")),(0,i.kt)("p",null,"If you want to manage the names of environment variables and/or hostnames, you can add a section ",(0,i.kt)("inlineCode",{parentName:"p"},"ist")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"warp.config.js")," file, as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  container: \"my-container-service\",\n  ist: [\n    {\n      service: 'my-sql',\n      variables: [ 'MY_SQL_SERVICE', 'ANOTHER_VAR' ],\n      hostnames: [ 'mysql.local' ],\n    },\n  ],\n};\n")),(0,i.kt)("p",null,"In this case, the platform will create two environment variables (",(0,i.kt)("inlineCode",{parentName:"p"},"MY_SQL_SERVICE")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"ANOTHER_VAR"),") and one hostname (",(0,i.kt)("inlineCode",{parentName:"p"},"mysql.local"),") in the container ",(0,i.kt)("inlineCode",{parentName:"p"},"my-docker-service"),", to communicate privately with the service ",(0,i.kt)("inlineCode",{parentName:"p"},"my-sql")," by ",(0,i.kt)("em",{parentName:"p"},"TCP")," on any port."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ist")," can contain only one entry by service, but any number of entries for different services."),(0,i.kt)("li",{parentName:"ul"},"arrays are optional."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"variables")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"hostanmes")," can be omitted if not needed.")),(0,i.kt)("h1",{id:"notes"},"Notes"),(0,i.kt)("h2",{id:"conflicts"},"Conflicts"),(0,i.kt)("p",null,"In cases where two service names give the same environment variables and hostnames due to the encoding, the behaviour is undefined. In this case, we suggest using a configuration in the ",(0,i.kt)("inlineCode",{parentName:"p"},"warp.config.js")," to be able to manage variable names and hostnames adequately."),(0,i.kt)("h2",{id:"resolution-of-ist-hostname"},"Resolution of ",(0,i.kt)("em",{parentName:"h2"},"IST")," hostname"),(0,i.kt)("p",null,"Hostnames for ",(0,i.kt)("em",{parentName:"p"},"IST")," are automatically injected in the files ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/hosts")," of your container. In classic configuration and usage, everything will work well. There are two reasons why your ",(0,i.kt)("em",{parentName:"p"},"IST")," hostname could not be resolved:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Your application does not use the ",(0,i.kt)("inlineCode",{parentName:"li"},"getaddrinfo")," or equivalent call. In this case, your application probably uses the ",(0,i.kt)("em",{parentName:"li"},"DNS")," service by using ",(0,i.kt)("em",{parentName:"li"},"DNS over TLS"),", ",(0,i.kt)("em",{parentName:"li"},"DNS over HTTPS"),", or even the ",(0,i.kt)("em",{parentName:"li"},"DNS")," standard ",(0,i.kt)("em",{parentName:"li"},"UDP")," port."),(0,i.kt)("li",{parentName:"ul"},"Your container does not use the file ",(0,i.kt)("inlineCode",{parentName:"li"},"/etc/hosts")," by having a specific setting in ",(0,i.kt)("inlineCode",{parentName:"li"},"/etc/nsswitch.conf"),". Usually, this file indicates with a ",(0,i.kt)("inlineCode",{parentName:"li"},"hosts: files dns")," to use the ",(0,i.kt)("inlineCode",{parentName:"li"},"/etc/hosts")," file. If there is no ",(0,i.kt)("inlineCode",{parentName:"li"},"files"),", the resolution of ",(0,i.kt)("em",{parentName:"li"},"IST")," hostnames will not be successful.")),(0,i.kt)("p",null,"In these rare cases, you need to use environment variables instead of hostnames."),(0,i.kt)("h2",{id:"service-visibility"},"Service visibility"),(0,i.kt)("p",null,"Currently, on our platform, each service has a public ",(0,i.kt)("em",{parentName:"p"},"URL")," that allows access at the ",(0,i.kt)("em",{parentName:"p"},"HTTPS")," level. By default, this public ",(0,i.kt)("em",{parentName:"p"},"URL")," is mapped to the exposed port of your container image. If you want to avoid exposing this port to the public ",(0,i.kt)("em",{parentName:"p"},"URL"),", indicate in the ",(0,i.kt)("inlineCode",{parentName:"p"},"warp.config.js")," of the service a port not processed by your service. Access via the public ",(0,i.kt)("em",{parentName:"p"},"URL")," will be directed to this port, which will do nothing."),(0,i.kt)("p",null,"To set the port, use ",(0,i.kt)("inlineCode",{parentName:"p"},"deployment.port")," property."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = {\n  container: "my-docker-service",\n  deployment: {\n    port: 65500,\n  },\n};\n')))}d.isMDXComponent=!0}}]);